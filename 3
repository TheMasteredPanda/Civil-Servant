from enum import Enum

#The time units used to convert one value in a unit of time to another.
class TimeUnit(Enum):
    MILISECONDS = 'ms' 
    SECONDS = 's'
    MINUTES = 'm' 
    HOURS = 'h'
    DAYS = 'd' 

    @classmethod
    def from_name(cls, name: str):
        for unit in TimeUnit:
            if  unit.name == name.upper():
                return unit

#Used to convert a value in one unit of time to another unit of time.
def convert(value: float, time_unit: TimeUnit, to_time_unit: TimeUnit):
    if time_unit == TimeUnit.MILISECONDS:
        if to_time_unit == 0:
            value = value * 1000
        if to_time_unit in (TimeUnit.SECONDS,TimeUnit.MINUTES,TimeUnit.HOURS,TimeUnit.DAYS):
            value = value / 1000
        if to_time_unit in (TimeUnit.MINUTES,TimeUnit.HOURS,TimeUnit.DAYS):
            value = value / 60
        if to_time_unit in (TimeUnit.HOURS,TimeUnit.DAYS):
            value = value / 60
        if to_time_unit == TimeUnit.DAYS:
            value = value / 24
        return value

    if time_unit == TimeUnit.SECONDS:
        if to_time_unit in (TimeUnit.MILISECONDS):
            value = value * 1000
        if to_time_unit == 0:
            value = value * 1000

        if to_time_unit in (TimeUnit.MINUTES,TimeUnit.HOURS,TimeUnit.DAYS):
            value = value / 60
        if to_time_unit in (TimeUnit.HOURS,TimeUnit.DAYS):
            value = value / 60
        if to_time_unit == TimeUnit.DAYS:
            value = value / 24
        return value

    if time_unit == TimeUnit.MINUTES:
        if to_time_unit in (TimeUnit.SECONDS,TimeUnit.MILISECONDS):
            value = value * 60
        if to_time_unit in (TimeUnit.MILISECONDS):
            value = value * 1000;

        if to_time_unit in (TimeUnit.HOURS,TimeUnit.DAYS):
            value = value / 60
        if to_time_unit == TimeUnit.DAYS:
            value = value / 24
        return value

    if time_unit == TimeUnit.HOURS:
        if to_time_unit in (TimeUnit.MINUTES,TimeUnit.SECONDS,TimeUnit.MILISECONDS):
            value = value * 60
        if to_time_unit in (TimeUnit.SECONDS,TimeUnit.MILISECONDS):
            value = value * 60
        if to_time_unit in (TimeUnit.MILISECONDS):
            value = value * 1000
        if to_time_unit == 0:
            value = value * 1000
        if to_time_unit == TimeUnit.DAYS:
            value = value / 24
        return value

    if time_unit == TimeUnit.DAYS:
        if to_time_unit in (TimeUnit.HOURS,TimeUnit.MINUTES,TimeUnit.SECONDS,TimeUnit.MILISECONDS):
            value = value * 24
        if to_time_unit in (TimeUnit.MINUTES,TimeUnit.SECONDS,TimeUnit.MILISECONDS):
            value = value * 60
        if to_time_unit in (TimeUnit.SECONDS,TimeUnit.MILISECONDS):
            value = value * 60
        if to_time_unit in (TimeUnit.MILISECONDS):
            value = value * 1000
        if to_time_unit == TimeUnit.MILISECONDS:
            value = value * 1000
        return value

#Formats time into a string. 
def format_time(miliseconds: int, shorthand: bool):
    days = (((miliseconds / 1000) / 60) / 60) / 24
    hours = ((((miliseconds) / 1000) / 60 ) / 60) - (days * 24)
    minutes = ((miliseconds / 1000) / 60) - ((days / 24) / 60)
    seconds = (miliseconds / 1000) - (minutes * 60)
    result = ""

    if days > 0:
        result = '{} {}'.format(days, ('Day' if days == 1 else 'Days') if shorthand is False else 'd')

    if hours > 0:
        result = result + ',' if len(result) > 0 else '' + '{} {}'.format(hours, ('Hour' if hours == 1 else 'Hours') if shorthand is False else 'h')

    if minutes > 0:
        result = result + ',' if len(result) > 0 else '' + '{} {}'.format(minutes, ('Minute' if minutes == 1 else 'Minutes') if shorthand is False else 'm')

    if seconds > 0:
        result = result + ',' if len(result) > 0 else '' + '{} {}'.format(seconds, ('Second' if seconds == 1 else 'Seconds') if shorthand is False else 's')

    return result
